<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonarsource.parent</groupId>
    <artifactId>parent</artifactId>
    <version>83.0.0.2369</version>
  </parent>
  <packaging>pom</packaging>
  <groupId>org.sonarsource.java</groupId>
  <artifactId>sonar-java-symbolic-execution</artifactId>
  <version>8.15.0-SNAPSHOT</version>
  <name>SonarQube Java :: Symbolic Execution</name>
  <description>Symbolic execution analyzer for Java</description>
  <inceptionYear>2012</inceptionYear>

  <issueManagement>
    <system>JIRA</system>
    <url>https://jira.sonarsource.com/browse/SONARJAVA</url>
  </issueManagement>

  <ciManagement>
    <system>Cirrus CI</system>
    <url>https://cirrus-ci.com/github/SonarSource/sonar-java-symbolic-execution</url>
  </ciManagement>

  <licenses>
    <license>
      <name>SSALv1</name>
      <url>https://sonarsource.com/license/ssal/</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>SonarSource</name>
    <url>http://www.sonarsource.com</url>
  </organization>

  <scm>
    <connection>scm:git:git@github.com:SonarSource/sonar-java-symbolic-execution.git</connection>
    <developerConnection>scm:git:git@github.com:SonarSource/sonar-java-symbolic-execution.git</developerConnection>
    <url>https://github.com/SonarSource/sonar-java-symbolic-execution</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <!-- Main maintainers -->
    <developer><name>Alban Auzeill</name>         <id>alban-auzeill</id>                     <organization>SonarSource</organization></developer>
    <developer><name>Angelo Buono</name>          <id>ADarko22</id>                          <organization>SonarSource</organization></developer>
    <developer><name>Dorian Burihabwa</name>      <id>dorian-burihabwa-sonarsource</id>      <organization>SonarSource</organization></developer>
    <developer><name>Irina Batinic</name>         <id>irina-batinic-sonarsource</id>         <organization>SonarSource</organization></developer>
    <developer><name>Johann Beleites</name>       <id>johann-beleites-sonarsource</id>       <organization>SonarSource</organization></developer>
    <developer><name>Leonardo Pilastri</name>     <id>leonardo-pilastri-sonarsource</id>     <organization>SonarSource</organization></developer>
    <developer><name>Marco Kaufmann</name>        <id>kaufco</id>                            <organization>SonarSource</organization></developer>
    <developer><name>Margarita Nedzelska</name>   <id>leveretka</id>                         <organization>SonarSource</organization></developer>
    <developer><name>Michael Gumowski</name>      <id>Wohops</id>                            <organization>SonarSource</organization></developer>
    <!-- Frequent Contributors -->
    <developer><name>Chrislain Razafimahefa</name><id>chrislain-razafimahefa-sonarsource</id><organization>SonarSource</organization></developer>
    <developer><name>Evgeny Mandrikov</name>      <id>godin</id>                             <organization>SonarSource</organization></developer>
    <developer><name>Nicolas Peru</name>          <id>benzonico</id>                         <organization>SonarSource</organization></developer>
    <developer><name>Quentin Jaquier</name>       <id>quentin-jaquier-sonarsource</id>       <organization>SonarSource</organization></developer>
    <developer><name>Sebastian Hungerecker</name> <id>sebastian-hungerecker-sonarsource</id> <organization>SonarSource</organization></developer>
    <developer><name>Tibor Blenessy</name>        <id>saberduck</id>                         <organization>SonarSource</organization></developer>
  </developers>

  <modules>
    <module>java-symbolic-execution-checks-test-sources</module>
    <module>java-symbolic-execution-plugin</module>
  </modules>

  <properties>
    <jdk.min.version>17</jdk.min.version>
    <license.title>SonarQube Java</license.title>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jacoco.version>0.8.10</jacoco.version>
    <maven.deploy.skip>false</maven.deploy.skip>
    <!--
      sonar-plugin-api should be compatible with SQ peach. You can see which version SQ is using
      at SonarSource/sonarqube/gradle.properties
     -->
    <sonar.plugin.api.version>11.0.0.2664</sonar.plugin.api.version>
    <analyzer.commons.version>2.16.0.3141</analyzer.commons.version>
    <sonar.version>25.1.0.102122</sonar.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.sonarsource.api.plugin</groupId>
        <artifactId>sonar-plugin-api</artifactId>
        <version>${sonar.plugin.api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.api.plugin</groupId>
        <artifactId>sonar-plugin-api-test-fixtures</artifactId>
        <version>${sonar.plugin.api.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.sonarqube</groupId>
        <artifactId>sonar-plugin-api-impl</artifactId>
        <version>${sonar.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.analyzer-commons</groupId>
        <artifactId>sonar-analyzer-commons</artifactId>
        <version>${analyzer.commons.version}</version>
      </dependency>
      <dependency>
        <groupId>org.sonarsource.analyzer-commons</groupId>
        <artifactId>sonar-performance-measure</artifactId>
        <version>${analyzer.commons.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>5.11.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>5.14.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>5.14.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.26.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>33.3.1-jre</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.17.0</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.30</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>alphabetical</runOrder>
          <environmentVariables>
            <M2_REPO>${settings.localRepository}</M2_REPO>
          </environmentVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
